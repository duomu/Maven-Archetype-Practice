#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${package}.${artifactId}.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="${package}.${artifactId}.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${symbol_dollar}{criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${symbol_dollar}{criterion.condition} ${symbol_pound}{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${symbol_dollar}{criterion.condition} ${symbol_pound}{criterion.value} and ${symbol_pound}{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${symbol_dollar}{criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    ${symbol_pound}{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${symbol_dollar}{criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${symbol_dollar}{criterion.condition} ${symbol_pound}{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${symbol_dollar}{criterion.condition} ${symbol_pound}{criterion.value} and ${symbol_pound}{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${symbol_dollar}{criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    ${symbol_pound}{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, age, address
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="${package}.${artifactId}.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${symbol_dollar}{orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = ${symbol_pound}{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer" >
    delete from user
    where id = ${symbol_pound}{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="${package}.${artifactId}.model.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="${package}.${artifactId}.model.User" >
    insert into user (id, name, age, 
      address)
    values (${symbol_pound}{id,jdbcType=INTEGER}, ${symbol_pound}{name,jdbcType=VARCHAR}, ${symbol_pound}{age,jdbcType=INTEGER}, 
      ${symbol_pound}{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="${package}.${artifactId}.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="address != null" >
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ${symbol_pound}{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        ${symbol_pound}{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        ${symbol_pound}{age,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        ${symbol_pound}{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="${package}.${artifactId}.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.id != null" >
        id = ${symbol_pound}{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = ${symbol_pound}{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = ${symbol_pound}{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = ${symbol_pound}{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set id = ${symbol_pound}{record.id,jdbcType=INTEGER},
      name = ${symbol_pound}{record.name,jdbcType=VARCHAR},
      age = ${symbol_pound}{record.age,jdbcType=INTEGER},
      address = ${symbol_pound}{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="${package}.${artifactId}.model.User" >
    update user
    <set >
      <if test="name != null" >
        name = ${symbol_pound}{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = ${symbol_pound}{age,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = ${symbol_pound}{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = ${symbol_pound}{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="${package}.${artifactId}.model.User" >
    update user
    set name = ${symbol_pound}{name,jdbcType=VARCHAR},
      age = ${symbol_pound}{age,jdbcType=INTEGER},
      address = ${symbol_pound}{address,jdbcType=VARCHAR}
    where id = ${symbol_pound}{id,jdbcType=INTEGER}
  </update>
</mapper>